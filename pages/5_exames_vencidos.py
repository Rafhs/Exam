import streamlit as st
import pandas as pd
from data.dados import database as db


st.set_page_config(page_title="Controle de Vencimentos", page_icon="üóìÔ∏è", layout="wide")

st.title("üóìÔ∏è Controle de Vencimentos de Exames")
st.markdown("Vis√£o completa dos exames a vencer e dos que j√° est√£o vencidos.")
st.markdown("---")

# --- SE√á√ÉO 1: EXAMES J√Å VENCIDOS ---
st.subheader("‚ö†Ô∏è Exames Vencidos")

# A chamada √† fun√ß√£o do banco de dados acontece aqui
exames_vencidos = db.get_exames_vencidos()

# A verifica√ß√£o acontece aqui: se a lista n√£o estiver vazia, mostra a tabela.
if exames_vencidos:
    with st.expander("Clique para ver a lista de exames vencidos", expanded=True):
        df_vencidos = pd.DataFrame(
            exames_vencidos,
            columns=["Nome do Funcion√°rio", "Matr√≠cula", "Tipo de Exame", "Data de Vencimento"]
        )
        st.error("Aten√ß√£o! Os seguintes exames j√° passaram da data de vencimento:")
        st.dataframe(df_vencidos, use_container_width=True, hide_index=True)
else:
    # Se a lista estiver vazia, mostra a mensagem de sucesso.
    st.success("Nenhum exame vencido encontrado. Parab√©ns!")

st.markdown("---")

# --- SE√á√ÉO 2: EXAMES A VENCER ---
st.subheader("Exames com Vencimento Pr√≥ximo")

dias_para_vencer = st.slider(
    label="Selecione o per√≠odo de visualiza√ß√£o (em dias):",
    min_value=7,
    max_value=180,
    value=30,
    step=7
)

exames_a_vencer = db.get_exames_vencendo(dias=dias_para_vencer)

if exames_a_vencer:
    st.info(f"Encontrados {len(exames_a_vencer)} exames vencendo nos pr√≥ximos {dias_para_vencer} dias.")
    df_exames = pd.DataFrame(
        exames_a_vencer,
        columns=["Nome do Funcion√°rio", "Matr√≠cula", "Tipo de Exame", "Data de Vencimento"]
    )
    st.dataframe(df_exames, use_container_width=True, hide_index=True)
else:
    st.info(f"Nenhum exame previsto para vencer nos pr√≥ximos {dias_para_vencer} dias.")
