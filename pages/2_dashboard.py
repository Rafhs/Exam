# pages/1_Dashboard.py (Vers칚o com Edi칞칚o)

import streamlit as st
import pandas as pd
from data.dados import database as db
from datetime import datetime

st.set_page_config(page_title="Edi칞칚o de Funcion치rios", page_icon="游논", layout="wide")

st.title("游논 Consulta e Edi칞칚o de Funcion치rios")
st.markdown("Selecione um funcion치rio na lista para visualizar ou editar suas informa칞칫es.")

if st.sidebar.button("游댃 Atualizar Dados"):
    st.cache_data.clear()
    st.success("Dados atualizados!")

# --- 1. Sele칞칚o do Funcion치rio para Edi칞칚o ---
# Usamos a nova fun칞칚o para buscar todos os dados, incluindo o ID
todos_funcionarios = db.get_all_funcionarios_for_editing()

if not todos_funcionarios:
    st.warning("Ainda n칚o h치 funcion치rios cadastrados no sistema.")
    st.stop()

# Criamos um dicion치rio para mapear o nome de exibi칞칚o ao ID do funcion치rio
dict_funcionarios = {f"{f[1]} ({f[4]}) - {f[8]}": f[0] for f in todos_funcionarios}
lista_display_funcionarios = ["Selecione um funcion치rio para editar..."] + sorted(list(dict_funcionarios.keys()))

selecao_display = st.selectbox("Selecione o Funcion치rio:", options=lista_display_funcionarios)


# --- 2. Formul치rio de Edi칞칚o ---
# O formul치rio s칩 aparece se um funcion치rio v치lido for selecionado
if selecao_display != "Selecione um funcion치rio para editar...":
    # Encontra o ID do funcion치rio selecionado
    id_selecionado = dict_funcionarios[selecao_display]

    # Busca os dados completos do funcion치rio selecionado
    dados_atuais = [f for f in todos_funcionarios if f[0] == id_selecionado][0]

    st.divider()
    st.subheader(f"Editando: **{dados_atuais[1]}**")

    with st.form(key="edicao_funcionario_form"):
        # Extrai os dados atuais para preencher o formul치rio
        _, nome, cpf, rg, matricula, cargo, depto, dt_admissao, empresa, cnpj = dados_atuais
        dt_admissao_obj = datetime.strptime(dt_admissao, '%Y-%m-%d').date()

        # Layout em colunas para organizar o formul치rio
        col1, col2 = st.columns(2)
        with col1:
            novo_nome = st.text_input("Nome Completo", value=nome)
            novo_cpf = st.text_input("CPF (apenas n칰meros)", value=cpf, max_chars=11)
            novo_rg = st.text_input("RG (apenas n칰meros)", value=rg, max_chars=9)
            novo_matricula = st.text_input("Matr칤cula", value=matricula, max_chars=10)
            novo_cargo = st.text_input("Cargo / Fun칞칚o", value=cargo) # Usamos text_input para permitir cargos n칚o cadastrados

        with col2:
            novo_depto = st.text_input("Departamento", value=depto)
            novo_dt_admissao = st.date_input("Data de Admiss칚o", value=dt_admissao_obj)
            novo_empresa = st.text_input("Nome da Empresa", value=empresa)
            novo_cnpj = st.text_input("CNPJ (apenas n칰meros)", value=cnpj, max_chars=14)

        # Bot칚o de salvar dentro do formul치rio
        submit_button = st.form_submit_button(label="Salvar Altera칞칫es")

        if submit_button:
            # Valida칞칫es b치sicas
            if not (novo_cpf.isdigit() and novo_rg.isdigit() and novo_matricula.isdigit() and novo_cnpj.isdigit()):
                st.error("Erro: CPF, RG, Matr칤cula e CNPJ devem conter apenas n칰meros.")
            else:
                # Chama a fun칞칚o de update do banco de dados
                db.update_funcionario_detalhes(
                    id_selecionado, novo_nome, novo_cpf, novo_rg, novo_matricula,
                    novo_cargo, novo_depto, novo_dt_admissao.strftime('%Y-%m-%d'),
                    novo_empresa, novo_cnpj
                )
                st.success("Dados do funcion치rio atualizados com sucesso!")
                st.info("A p치gina ser치 atualizada para refletir as mudan칞as.")
                st.cache_data.clear() # Limpa o cache para for칞ar a recarga dos dados
                st.rerun() # Recarrega a p치gina

st.divider()

# --- 3. Tabela de Visualiza칞칚o Geral (Opcional, mas 칰til) ---
st.subheader("Vis칚o Geral dos Funcion치rios")
# Usamos a fun칞칚o antiga para visualiza칞칚o, que j치 tem o formato de data correto
df_funcionarios = pd.DataFrame(
    db.get_all_funcionarios_detalhes(),
    columns=["Nome Completo", "CPF", "RG", "Matr칤cula", "Cargo", "Departamento", "Data de Admiss칚o", "Empresa"]
)
st.dataframe(df_funcionarios, use_container_width=True, hide_index=True)